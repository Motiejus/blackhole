#!/bin/bash
set -euo pipefail

declare PYTHON_PID=0
declare NODE_PID=0
readonly SLEEPTIME=0.1

cleanup() {
    kill $PYTHON_PID
    kill $NODE_PID
}

# Prepare tc rules to throttle dns
tc_on() {
    echo tc qdisc add dev eth0 root handle 1: htb
    echo tc class add dev eth0 parent 1: classid 1:1 htb rate 1000Mbps
    echo tc class add dev eth0 parent 1:1 classid 1:11 htb rate 1000Mbps
    echo tc qdisc add dev eth0 parent 1:11 handle 10: netem delay 500ms limit 9999999
    for ns in `awk '/nameserver/ { print $2 }' /etc/resolv.conf`; do
        echo tc filter add dev eth0 protocol ip prio 1 u32 match ip dst $ns flowid 1:11
    done
}

tc_off() {
    echo tc qdisc del dev eth0 root
}

# Start a local webserver on port 8080
start_webserver() {
    python -m SimpleHTTPServer 8000 > /dev/null 2>&1 &
    PYTHON_PID=$!
    trap cleanup SIGINT SIGTERM
}
start_node() {
    node index.js &
    NODE_PID=$!
    trap cleanup SIGINT SIGTERM
}

timeit() {
    /usr/bin/time -p "$@" 2>&1 | \
        awk 'NR==1 {out=$0} /^real/ {t=$2} END { print t " " out }'
}

do_test() {
    start_webserver
    start_node
    sleep 2

    set +e
    # alternate every second for local/remote
    for i in `seq 1 $1`; do
        sleep $SLEEPTIME
        if [[ $[ $i % 5 ] == 0 ]]; then
            timeit curl -s http://localhost:8080/local &
        else
            timeit curl -s http://localhost:8080/fail &
        fi
    done
    local sleep_here=$[ $1/10 + 1 ]  # 10 (times per second) := 1/$SLEEPTIME
    echo Done, sleeping $sleep_here secs
    sleep $sleep_here
    echo Done
}

main() {
    case ${1:-} in
        tc_on)
            tc_on;;
        tc_off)
            tc_off;;
        test)
            do_test $2
            cleanup;;
        *)
            echo "Usage:"
            echo "  $0 tc_on | sudo bash -x"
            echo "  $0 tc_off | sudo bash -x"
            echo "  $0 test X"
            echo "      X := number of requests"
            exit 1;;
    esac
}

main "$@"

# new stuff on a docker container: dnsutils time vim

# http://http.us.debian.org/debian/pool/main/t/time/time_1.7-25_amd64.deb
